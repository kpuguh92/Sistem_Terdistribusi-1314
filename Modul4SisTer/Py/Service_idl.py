# Python stubs generated by omniidl from Service.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "_GlobalIDL"
#
__name__ = "_GlobalIDL"
_0__GlobalIDL = omniORB.openModule("_GlobalIDL", r"Service.idl")
_0__GlobalIDL__POA = omniORB.openModule("_GlobalIDL__POA", r"Service.idl")


# interface Service
_0__GlobalIDL._d_Service = (omniORB.tcInternal.tv_objref, "IDL:Service:1.0", "Service")
omniORB.typeMapping["IDL:Service:1.0"] = _0__GlobalIDL._d_Service
_0__GlobalIDL.Service = omniORB.newEmptyClass()
class Service :
    _NP_RepositoryId = _0__GlobalIDL._d_Service[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0__GlobalIDL.Service = Service
_0__GlobalIDL._tc_Service = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._d_Service)
omniORB.registerType(Service._NP_RepositoryId, _0__GlobalIDL._d_Service, _0__GlobalIDL._tc_Service)

# Service operations and attributes
Service._d_ping = ((), (), None)
Service._d_hello = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), None)

# Service object reference
class _objref_Service (CORBA.Object):
    _NP_RepositoryId = Service._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def ping(self, *args):
        return self._obj.invoke("ping", _0__GlobalIDL.Service._d_ping, args)

    def hello(self, *args):
        return self._obj.invoke("hello", _0__GlobalIDL.Service._d_hello, args)

omniORB.registerObjref(Service._NP_RepositoryId, _objref_Service)
_0__GlobalIDL._objref_Service = _objref_Service
del Service, _objref_Service

# Service skeleton
__name__ = "_GlobalIDL__POA"
class Service (PortableServer.Servant):
    _NP_RepositoryId = _0__GlobalIDL.Service._NP_RepositoryId


    _omni_op_d = {"ping": _0__GlobalIDL.Service._d_ping, "hello": _0__GlobalIDL.Service._d_hello}

Service._omni_skeleton = Service
_0__GlobalIDL__POA.Service = Service
omniORB.registerSkeleton(Service._NP_RepositoryId, Service)
del Service
__name__ = "_GlobalIDL"

#
# End of module "_GlobalIDL"
#
__name__ = "Service_idl"

_exported_modules = ( "_GlobalIDL", )

# The end.
